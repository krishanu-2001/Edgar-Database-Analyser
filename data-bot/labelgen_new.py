# -*- coding: utf-8 -*-
"""LabelGen.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1js8YIHObDfgVT7Hr3dKcIrWDUyK3nBPe
"""
from cmath import isnan
import sys
import pandas as pd
import json

#below functions are designed to generate labels or categories for Profitablity ratios and 
# metrics on the basis of investability 
#Ideal Ranges of each ratios and metrics are taken on the basis of theoretical / technical 
#perspective generally used by investors
# labels generated in form of 0 or 1 or Nan: where 
      # 0 denotes bad Metrics or Ratio value for investment
      # 1 denotes good ratio value for investment
      # Nan denotes data insufficency that is data not published by company

##Functions
#1. Working Capital ratios  1.5=<r<=2
def wce(r):  
    if isnan(r)== True:
        return float('nan') 
    elif r>=1.5 and r<=2:
        return 1
    else: 
        return 0  
"================================================"
#2. Debt to Equity ratios  0.5=<r<=1.5
def de(r):
  if isnan(r)== True:
    return float('nan')    
  elif r>=0.5 and r<=1.5:
    return 1
  else: 
    return 0 
"================================================"
#3. Earning per Share  1=<r<=99
def eps(r):
    if isnan(r)== True:
        return float('nan')  
    elif r>=1 and r<=99:
        return 1
    else: 
        return 0 
"================================================"
#4. price-earning ratio::P/E ratio: r>13
def pe(r):
    if isnan(r)== True:
        return float('nan')  
    elif r>13:
        return 1
    else: 
        return 0
"================================================"
#5. Return of Equity:r>15
def roe(r):
    if isnan(r)== True:
        return float('nan')  
    elif r>15:
        return 1
    else: 
        return 0
"================================================"
#6. Rule of 40:r>40
def ro40(r):
    if isnan(r)== True:
        return float('nan') 
    elif r>40:
        return 1
    else: 
        return 0
"================================================"
#7. Market Capitalization: r> $2Billion
def market_cap(r):
    if isnan(r)== True:
        return float('nan')  
    elif r>2000000000:
        return 1
    else: 
        return 0
"================================================"
#8. Growth Rate:r>60%
def growth_rate(r):
    if isnan(r)== True:
        return float('nan') 
    elif r>60:
        return 1
    else: 
        return 0
"================================================"
#9. Profit Margin:r>20
def profit_margin(r):
    if isnan(r)== True:
        return float('nan') 
    elif r>20:
        return 1
    else: 
        return 0
"================================================"
#10. Gross Margin:r>0.5
def gross_margin(r):
    if isnan(r)== True:
        return float('nan')  
    elif r>0.5:
        return 1
    else: 
        return 0
"================================================"
#11. Magic Number: r>1
def magic_num(r):
    if isnan(r)== True:
        return float('nan')  
    elif r>1:
        return 1
    else: 
        return 0
"================================================"
#12. Churn Rate:r<1
def chun_rate(r):
    if isnan(r)== True:
        return float('nan') 
    elif r<1:
      return 1
    else: 
      return 0


"=============================================="